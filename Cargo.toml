[workspace]
members = [
    "capi/opencc-fmmseg-capi",
    "tools/dict-generate",
    "tools/opencc-clip",
    "tools/opencc-rs"
]

[package]
name = "opencc-fmmseg"
version = "0.8.1"
edition = "2021"
#rust-version = "1.75"
autobenches = false # Disable auto-bench
authors = ["Laisuk Lai <laisuk@yahoo.com>"]
description = "High-performance OpenCC-based Chinese conversion using FMM (Forward Maximum Matching) segmentation."
license = "MIT"
repository = "https://github.com/laisuk/opencc-fmmseg"
homepage = "https://github.com/laisuk/opencc-fmmseg"
documentation = "https://docs.rs/opencc-fmmseg"
readme = "README.md"
keywords = ["opencc", "chinese", "segmentation", "fmm", "conversion"]
categories = ["text-processing", "localization", "command-line-utilities", "parser-implementations"]
exclude = [
    "/.github",
    "/.gitignore",
    "/tools/",
    "/capi/",
    "/target/",
    "/benches/",
    "/examples/",
    "/tests/",
    "/python/",
    "*.md",
    "*.yml",
    "*.bak",
    "*.bka",
    "*.orig"
]

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
regex = "1.11.1"
serde_json = "1.0.143"
serde = { version = "1.0.219", features = ["derive"] }
serde_cbor = "0.11.2"
# use Rayon 1.10.0 for rustc 1.75.0 
# cargo update rayon@1.11.0 --precise 1.10.0
# cargo add rayon-core@=1.12.1
rayon = "=1.10.0"
zstd = "0.13.3"
rustc-hash = "2.1.1"
once_cell = "1.21.3"
#rayon-core = "=1.12.1"

# Disable dev- and [bench] for Windows 7 (rustc 1.75.0)
#  [dev-dependencies]
#  criterion = "0.7.0"

# [[bench]]
# name = "opencc_fmmseg_bench"
# harness = false

[profile.release]
opt-level = 3            # Maximize speed (better suited for C API performance)
codegen-units = 1          # Optimize across the entire codebase for better performance
lto = "fat"                # Full Link Time Optimization for improved binary performance
panic = "abort"            # Prevents Rust panics from unwinding, reducing binary size
incremental = false        # Disable incremental builds to fully optimize the release binary
strip = "symbols"          # Strips debug symbols while retaining export symbols needed for the C API
debug = 0                  # No debug info in the final binary to reduce size
#crt-static = false
